{
  "HTML": {
    "icon": "img/icon/html.png",
    "Предисловие": [
      "Веб(web) - это одна из сфер программирования, которая очень быстро развивается, и безостановочно растет во все стороны. Уже сейчас возможно написать программу для windows, линукс, mac и даже андроид устройств, пользуясь инструментами веба. Кстати, примером этому факту может послужить программа, в которой вы сейчас находитесь.",
      "img/1/1.1.png",
      "Веб может показаться необъятным. Html, js, css, scss, jQuery, bootstrap и прочих методологии с Фреймворками и библиотеками, не говоря уже о паттернах программирования, работе с сервером и базой данных. Видя такие слова можно потерять веру в свою обучаемость и просто сдаться. Но не стоит забывать, что тяжело только по началу. Все переплетено, и понимая одну технологию можно догадаться как с ней работает другая. Как в пазле, легче его заканчивать, нежели начинать собирать.",
      "И все же необходимо четко делить сайт на 2 мира, что работают чаще всего вместе, но могут разрабатывается отдельно друг от друга. Это frontend и backend. Frontend это то, что по итогу видит пользователь: странички, интерфейс, анимации и т. д. То есть, это все что касается оформления сайта. Backend это то, что делает сайт за кулисами: отправка данных, поддержка сервера, обработка запросов и т. п. Фронт (frontend) гораздо проще для понимания, ведь это по сути визуал, который все мы уже видели и щупали на любых сайтах.",
      "И так давайте упростим задачу, с изучения полного цикла создания сложных сайтов, до создания небольшой странички 'визитки'. То есть только фронт. Для этого познакомимся с 3 китами веба: html, css и javascript. Эти технологии есть на всех сегодняшних сайтах и являются необходимой базой для создания самои простой веб странички. "
    ],
    "Html": [
      "img/1/1.2.jpg",
      "HTML (от англ. HyperText Markup Language — «язык гипертекстовой разметки») — стандартизированный язык разметки документов во Всемирной паутине <s>",
      "Почему именно 3 кита (html, css, js)? Все потому что каждый инструмент выполняет свою функцию. Html нам нужен для обозначения элементов на сайте. Откройте любой сайт и посмотрите из чего он состоит. Из ссылок, картинок, текcта и так далее. Все это элементы страницы.",
      "Прямо сейчас создайте у себя на компьютере файл любого типа, например txt, Это не принципиально важно, все равно мы поменяем это расширение на html. После того как мы его поменяли, можно заметить что иконка документа сменилась на иконку браузера. Поздравляю эта ваш первый сайт. Кликните по ней 2 раза и отроется браузер с вашей страницей. Как видите она пуста. На ней нет элементов ссылок, картинок и текста, потому что сам файл пуст. Сверните браузер откройте файл с помощью блокнота. Напишите в нем что угодно, например 'hello world'. Теперь перейдите в браузер и обновите страницу. Чудеса правда? Вывод в том что с помощью html можно создавать содержимое для сайта."
    ],
    "Теги и атрибуты": [
      "Текст это конечно хорошо но хотелось бы чего ни будь посерьезнее, например ссылку. То есть нам нужен другой элемент. Как же нам сказать браузеру, что вместо текста нам нужна ссылка? Тут и нужны теги.",
      "HTML-теги — основа языка HTML. Теги используются для разграничения начала и конца элементов в разметке.<s>",
      "Выглядит это как-то так",
      "img/1/1.3.jpg big",
      "Вы все правильно поняли. Тег 'a' говорит браузеру: все что находиться между '< a>' и  '</ a>' является ссылкой. это понятно, но что за 'href' ? Это называется  атрибут, с помощью которого браузер понимает куда надо переходить.",
      "<s> HTML-атрибуты сообщают браузеру, каким образом должен отображаться тот или иной элемент страницы. Атрибуты позволяют сделать более разнообразными внешний вид информации, добавляемой с помощью одинаковых тегов.",
      "Теги бывают парными и одиночными. На рисунке показаны парные теги, то есть, которые открывется и закрывается (например, выше описанная ссылка). Атрибуты пишутся в открывающем теге.",
      "Тегов очень много и нет смысла знать все. Достаточно знать всего несколько, которые наиболее часто используются. К таким относятся тег ссылки, тег картинки, тег абзаца, тег загаловка, тег пустого блока. Для начала столько тегов вам будет достаточно. Давайте разберем каждый из них.",
      "Тег <img> предназначен для отображения на веб-странице изображений в графическом формате GIF, JPEG или PNG и является примером одиночного тега. Адрес файла с картинкой задаётся через атрибут src. Если необходимо, то рисунок можно сделать ссылкой на другой файл, поместив тег <img> в контейнер <a>. При этом вокруг изображения отображается рамка, которую можно убрать, добавив атрибут border='0' в тег <img>. Скачайте какую-нибудь  картинку и поместите ее в ту же папку, где у вас находится html файл. И напишите следующий код: <img src='nazvanieKartinki.jpg'  / >'. Сохраните изменения в файле и обновите страницу(делайте так после любого изменения в файле, чтобы увидеть результат). теперь на странице должна отобразится картинка.",
      "Тег <p> Определяет текстовый абзац. текст внутри этого тега всегда начинается с новой строки. Самый простой тег, не имеющий объязательных атрибутов. Можете написать несколько раз: <p>text1</p> . Часто нужен для отобажения статей, новостей и прочих блоков с текстовой информациеи.",
      "HTML предлагает шесть заголовков разного уровня, которые показывают относительную важность секции, расположенной после заголовка. Так, тег <h1> представляет собой наиболее важный заголовок первого уровня, а тег <h6> служит для обозначения заголовка шестого уровня и является наименее значительным. По умолчанию, заголовок первого уровня отображается самым крупным шрифтом жирного начертания, заголовки последующего уровня по размеру меньше. Теги <h1>,...,<h6> относятся к блочным элементам, они всегда начинаются с новой строки, а после них другие элементы отображаются на следующей строке. Кроме того, перед заголовком и после него добавляется пустое пространство. Можете написать : <h1>title</h1>. Попробуйте поменять 1 на 2, а потом на 3 и так до 6."
    ],

    "тест 1 <test>": {
      "qsn1": {
        "qsn": "выберете 1 из ответов",
        "ask": ["вариант 1", "вариант 2", "вариант 3", "<s>вариант 4"]
      },
      "qsn2": {
        "qsn": "выберете 2 из ответов",
        "ask": ["вариант 1", "вариант 2", "вариант 3", "<s>вариант 4"]
      },
      "qsn3": {
        "qsn": "выберете 3 из ответов",
        "ask": ["вариант 1", "вариант 2", "вариант 3", "<s>вариант 4"]
      },
      "qsn4": {
        "qsn": "выберете 4 из ответов",
        "ask": ["вариант 1", "вариант 2", "вариант 3", "<s>вариант 4"]
      }
    }
  }
}
